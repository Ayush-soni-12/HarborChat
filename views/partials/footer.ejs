<!-- Chat Area -->
<div class="chat-area" id="chatArea">
  <div class="empty-chat">
    <div class="empty-chat-icon">
      <i class="fas fa-comment-dots"></i>
    </div>
    <h2>HarborChat Web</h2>
    <p>Select a chat to start messaging</p>
  </div>

  <!--  personal chat  -->
  <!-- ...existing code... -->
  <div class="chattingArea">
    <div class="chat">
      <div class="nav">
        <div class="info">
          <div class="nav-item">
            <div class="nav-avatar"></div>
            <div class="nav-info">
              <div class="nav-name" id="chatName"></div>
              <span class="user-status">Offline</span>
            </div>
          </div>
        </div>

        <div id="secretStatus" style="display: none">
          Secret Chat Active - <span id="secretTimer">05:00</span>
        </div>
        <!-- Full screen modal -->



        <div class="dotIcon">
          <!-- Somewhere in your chat page navbar -->


            
          <select id="languageSelector" class="language-selector">
            <option value="">Send as is</option>
            <option value="en">English</option>
            <option value="es">Spanish (Espa√±ol)</option>
            <option value="fr">French (Fran√ßais)</option>
            <option value="de">German (Deutsch)</option>
            <option value="it">Italian (Italiano)</option>
            <option value="pt">Portuguese (Portugu√™s)</option>
            <option value="ru">Russian (–†—É—Å—Å–∫–∏–π)</option>
            <option value="zh">Chinese (‰∏≠Êñá)</option>
            <option value="ja">Japanese (Êó•Êú¨Ë™û)</option>
            <option value="ko">Korean (ÌïúÍµ≠Ïñ¥)</option>
            <option value="ar">Arabic (ÿßŸÑÿπÿ±ÿ®Ÿäÿ©)</option>
            <option value="hi">Hindi (‡§π‡§ø‡§®‡•ç‡§¶‡•Ä)</option>
            <option value="bn">Bengali (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ)</option>
            <option value="pa">Punjabi (‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä)</option>
            <option value="tr">Turkish (T√ºrk√ße)</option>
            <option value="nl">Dutch (Nederlands)</option>
            <option value="sv">Swedish (Svenska)</option>
            <option value="fi">Finnish (Suomi)</option>
            <option value="pl">Polish (Polski)</option>
            <option value="uk">Ukrainian (–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞)</option>
            <option value="vi">Vietnamese (Ti·∫øng Vi·ªát)</option>
            <option value="th">Thai (‡πÑ‡∏ó‡∏¢)</option>
            <option value="id">Indonesian (Bahasa Indonesia)</option>
          </select>

          <button
            id="whisperBotBtn"
            title="WhisperBot"
            class="icon-button whisper-bot-btn"
            data-bs-toggle="modal"
            data-bs-target="#staticBackdrop"
          >
            <i class="fa-solid fa-robot robot"></i>
          </button>
          <!-- Modal -->
          <div
            class="modal fade"
            id="staticBackdrop"
            data-bs-backdrop="static"
            data-bs-keyboard="false"
            tabindex="-1"
            aria-labelledby="staticBackdropLabel"
            aria-hidden="true"
          >
            <div class="modal-dialog  modal-fullscreen custom-modal">
              <div class="modal-content full-height-modal">
                <div class="modal-header">
                  <h5 class="modal-title" id="staticBackdropLabel">
                    WhisperBot
                  </h5>
                  <button
                    type="button"
                    class="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                  ></button>
                </div>
                <div class="modal-body">
                  <div class="container-fluid p-4">
                    <!-- Header Section -->
                    <div
                      class="d-flex justify-content-between align-items-center mb-4"
                    >
                      <h5 class="m-0 text-primary">
                        <i class="bi bi-robot me-2"></i>WhisperBot Interface
                      </h5>
                      <span class="badge bg-light text-dark">
                        <i class="bi bi-lock-fill me-1"></i>End-to-End Encrypted
                      </span>
                    </div>

                    <!-- Voice Input Section -->
                    <div class="card mb-4 shadow-sm">
                      <div class="card-header bg-light">
                        <h6 class="m-0 fw-bold">
                          <i class="bi bi-mic-fill text-primary me-2"></i>Voice
                          Input
                        </h6>
                      </div>
                      <div class="card-body">
                        <div class="d-flex align-items-center gap-3">
                          <button
                            id="micBtn"
                            class="btn btn-primary rounded-pill px-4 py-2"
                          >
                            <i class="bi bi-mic me-2"></i>Start Listening
                          </button>
                          <div class="flex-grow-1">
                            <div class="progress" style="height: 8px">
                              <div
                                id="volumeIndicator"
                                class="progress-bar bg-info"
                                style="width: 0%"
                              ></div>
                            </div>
                          </div>
                          <span id="micStatus" class="badge bg-secondary"
                            >Microphone Off</span
                          >
                        </div>
                        <div class="mt-3 text-muted small">
                          <i class="bi bi-info-circle me-1"></i>Click the button
                          and speak clearly
                        </div>
                      </div>
                    </div>

                    <!-- Text Input Section -->
                    <div class="card mb-4 shadow-sm">
                      <div class="card-header bg-light">
                        <h6 class="m-0 fw-bold">
                          <i class="bi bi-keyboard-fill text-primary me-2"></i
                          >Text Input
                        </h6>
                      </div>
                      <div class="card-body">
                        <textarea
                          class="form-control border-2"
                          id="whisperTextArea"
                          rows="3"
                          placeholder="Type your question here... (E.g. 'Summarize last 5 messages')"
                        ></textarea>
                        <div
                          class="mt-2 text-end text-muted small"
                          id="charCount"
                        >
                          0/500 characters
                        </div>
                      </div>
                    </div>

                    <!-- Transcription Section -->
                    <div class="card mb-4 shadow-sm">
                      <div
                        class="card-header bg-light d-flex justify-content-between align-items-center"
                      >
                        <h6 class="m-0 fw-bold">
                          <i class="bi bi-soundwave text-primary me-2"></i
                          >Transcription
                        </h6>
                        <button
                          id="copyTranscription"
                          class="btn btn-sm btn-outline-secondary"
                        >
                          <i class="bi bi-clipboard"></i>
                        </button>
                      </div>
                      <div
                        class="card-body bg-light rounded"
                        style="min-height: 100px"
                      >
                        <div id="transcribedText" class="text-muted fst-italic">
                          Your transcribed text will appear here...
                        </div>
                      </div>
                    </div>
                   <!-- Bot response display -->
                   <div id="whisperBotOutput" class="border rounded p-3 bg-light mb-3" style="min-height: 100px;">
                     <span class="text-muted">ü§ñ WhisperBot will reply here...</span>
                   </div>
                   
                   <!-- Loader -->
                   <div id="whisperBotLoader" class="align-items-center gap-2 mb-2" style="display: none;">
                     <div class="spinner-border text-primary" role="status" style="width: 1.5rem; height: 1.5rem; ">
                       <span class="visually-hidden">Loading...</span>
                     </div>
                     <span class="text-muted">WhisperBot is thinking...</span>
                   </div>


                   

               

                    <!-- Action Buttons -->
                    <div class="d-flex justify-content-end gap-3 mt-4">
                      <button
                        class="btn btn-outline-secondary px-4"
                        data-bs-dismiss="modal"
                      >
                        <i class="bi bi-x-lg me-1"></i>Cancel
                      </button>
                      <button id="sendWhisper" class="btn btn-success px-4">
                        <i class="bi bi-send-fill me-1"></i>Send to WhisperBot
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <span>
            <div class="dropdown" style="display: inline-block">
              <!-- <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton2" data-bs-toggle="dropdown" aria-expanded="false"> -->
              <i
                class="fas fa-ellipsis-v"
                data-bs-toggle="dropdown"
                aria-expanded="false"
              ></i>
              <!-- </button> -->
              <ul
                class="dropdown-menu dropdown-menu-white iconImage"
                aria-labelledby="dropdownMenuButton2"
              >
                <li class="userinfo">
                  <a class="dropdown-item"
                    ><i class="fas fa-user-plus"></i> Contact info</a
                  >
                </li>
                <li>
                  <a class="dropdown-item" href="#"
                    ><i class="fa-regular fa-star"></i> Selected Messages</a
                  >
                </li>
                <li>
                  <a class="dropdown-item" href="#"
                    ><i class="fa-solid fa-bell-slash"></i> Mute
                    notifications</a
                  >
                </li>
                <li>
                  <a class="dropdown-item" href="#"
                    ><i class="fa-regular fa-square-check"></i> Disappearing
                    messages</a
                  >
                </li>
                <li>
                  <a class="dropdown-item" href="/chat"
                    ><i class="fa-regular fa-circle-xmark"></i> Close Chat</a
                  >
                </li>
                <li><hr class="dropdown-divider" /></li>
                <li>
                  <a class="dropdown-item danger" href="#"
                    ><i class="fa-regular fa-thumbs-down"></i> Report</a
                  >
                </li>
                <li>
                  <a class="dropdown-item danger" id="startSecretChat" href="#"
                    ><i class="fas fa-user-secret"></i> secret chat</a
                  >
                </li>
                <li>
                  <a class="dropdown-item danger" href="#"
                    ><i class="fa-regular fa-circle-xmark"></i> Block</a
                  >
                </li>
                <li>
                  <a class="dropdown-item danger" href="#" data-target-id 
                    ><i class="fa-solid fa-circle-minus"></i> Clear chat</a
                  >
                </li>
                <li>
                  <a class="dropdown-item danger" href="#"  data-bs-toggle="modal" data-bs-target="#clearchat"
                    ><i class="fa-solid fa-trash"></i> Delete chat</a
                  >
                </li>
              </ul>
            </div>
          </span>
          <span class="searchChat">
            <i class="fa-solid fa-magnifying-glass"></i>
          </span>
        </div>

        <!--  modal for deletechat -->

        <div class="modal fade" id="clearchat" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="staticBackdropLabel">Delete Chat</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              Are you sure you want to clear this chat from your side?
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" id="clear-chat" class="confirm-delete-btn" data-bs-dismiss="modal">Confirm</button>
            </div>
          </div>
        </div>
       </div>



      </div>
      <div
        id="loader"
        style="display: block; padding: 10px; text-align: center; width: 100%"
      >
        <div class="spinner"></div>
      </div>
       <div id="pinnedMessagesBar" class="pinned-bar"></div>
      <!-- <div class="video-container">
          <button id="videoToggleBtn" onclick="toggleVideo()">
              <i class="fa-solid fa-video"></i>
          </button>
          <video id="myVideo" autoplay playsinline style="display: none;"></video>
      </div> -->
      

    
    <!-- Contacts/List View (hidden during calls) -->
    <div class="main-ui" id="mainUI">
      <!-- Your existing contacts list UI -->
      <button id="callBtn" class="call-button">
        <i class="fas fa-video"></i> Start Video Call
      </button>
    </div>
    
    <!-- Pre-call Screen -->
     <div class="video-call-wrapper">

    <div class="pre-call-screen" id="preCallScreen" style="display: none;">
      <div class="user-avatar">
        <img id="callerAvatar" src="default-avatar.jpg" alt="User">
      </div>
      <h2 id="callStatusText">Calling User...</h2>
      <div class="pre-call-controls">
        <button class="cancel-call" id="cancelCallBtn">
          <i class="fas fa-times"></i> Cancel
        </button>
        <button class="start-call" id="startCallBtn" style="display: none;">
          <i class="fas fa-phone"></i> Accept
        </button>
      </div>
    </div>
    
    <!-- Active Call UI -->
    <div class="video-call-container" id="videoCallContainer" style="display: none;">
      <!-- Remote Video -->
          <div class="video-container">
      <!-- Remote video (big) -->
      <video id="remoteVideo" class="remote-video" autoplay playsinline></video>
      
      <!-- Local video (small preview) -->
      <div class="local-video-wrapper">
        <video id="localVideo" class="local-video" autoplay playsinline muted></video>
        <div class="local-video-controls">
          <button class="btn btn-sm toggle-camera" id="toggleCameraBtn">
            <i class="fas fa-camera-retro"></i>
          </button>
        </div>
      </div>
    </div>
      

      
      <!-- Call Controls -->
      <div class="call-controls">

        <button class="btn control-btn" id="muteBtn">
        <i class="fas fa-microphone"></i>
      </button>
        <button class="control-btn end-call-btn" id="endCallBtn">
          <i class="fas fa-phone-slash"></i>
        </button>
      <button class="btn control-btn" id="fullscreenBtn">
        <i class="fas fa-expand"></i>
      </button>
      </div>
  
   <div id="callTimer" class="call-timer">00:00</div>
    </div>
    </div>

   
 

      


      <div class="messages-container" id="messagesContainer">
        <!-- Messages will be inserted here -->
      </div>
      <div class="suggestion-controls">
      <div id="ai-typing-indicator" class="ai-typing hidden">ü§ñ Suggesting reply...</div>
      <div id="suggestion" class="suggestion-box"></div>
      </div>


      <div id="reply-preview" class="hidden-reply reply-message">
       <div><strong>Replying to:</strong></div>
       <div><em>"<span id="replyText"></span>"</em></div>
       <button id="cancelReply" class="cancel-reply"><i class="fa-solid fa-xmark"></i></button>
     </div>


      <!-- WhatsApp-like type bar -->
      <div class="type-bar">
        <button class="icon-btn">
          <i class="far fa-smile" id="emoji-button"></i>
        </button>
        <emoji-picker id="emoji-picker"></emoji-picker>
        <div class="audio-recorder-container">
          <button
            id="micButton"
            class="audio-btn mic-btn"
            title="Start Recording"
          >
            <i class="fa-solid fa-microphone"></i>
          </button>

          <div
            id="recordingControls"
            class="recording-controls"
            style="display: none"
          >
            <div class="waveform-container">
              <canvas id="waveformCanvas" width="200" height="40"></canvas>
            </div>

            <button
              id="stopButton"
              class="audio-btn stop-btn"
              title="Pause Recording"
            >
              <i class="fa-solid fa-pause"></i>
            </button>
            <button
              id="resumeButton"
              class="audio-btn resume-btn"
              title="Resume Recording"
              style="display: none"
            >
              <i class="fa-solid fa-microphone"></i>
            </button>
            <span id="recordingTimer" class="timer">00:00</span>

            <button
              id="playPreviewBtn"
              class="audio-btn preview-btn"
              title="Play Preview"
              style="display: none"
            >
              <i class="fa-solid fa-play"></i>
            </button>
            <button
              id="deleteRecordingBtn"
              class="audio-btn delete-btn"
              title="Delete Recording"
            >
              <i class="fa-solid fa-trash"></i>
            </button>
            <button
              id="sendRecordingBtn"
              class="audio-btn send-btn"
              title="Send Recording"
            >
              <i class="fa-solid fa-paper-plane"></i>
            </button>
          </div>
        </div>

        <audio id="audioPreview" style="display: none"></audio>

        <input
          type="text"
          class="type-input message-input"
          placeholder="Type a message"
          id="textMessage"
        />

        <!-- File input -->
        <input
          type="file"
          id="imageInput"
          accept="image/*"
          multiple
          style="display: none"
        />
        <span
          id="fileName"
          style="margin-left: 10px; font-size: 0.9em; color: #888"
        ></span>
        <!-- <input type="checkbox" id="lock-toggle" /> <i class="fa-solid fa-lock"></i> -->
         <div class="smart-reply-toggle">
         <input type="checkbox" id="smartReplyToggle" checked />
         <i class="fa-solid fa-robot"></i>
       </div>

        <div class="mode-toggle">
          <label class="toggle-label">
            <input type="checkbox" id="lock-toggle" />
            <span class="custom-checkbox"></span>
            <i class="fa-solid fa-lock"></i>
          </label>
        </div>
        <button type="button" id="paperclip-btn" class="icon-btn">
          <i class="fas fa-paperclip"></i>
        </button>
        <button class="icon-btn send-btn send-button">
          <i class="fas fa-paper-plane"></i>
        </button>
      </div>
    </div>
    <!-- <div class="user-info">Hello world</div> -->
  </div>
</div>
 <div class="user-info-overlay" id="userInfoOverlay"></div>
 <div class="search-info" id="searchinfochatBar">
  <div class="crossEdit">
    <div class="crossbtn">
    <i class="fa-solid fa-xmark"></i>
    </div>
    <div class="editbtn">
    <i class="fa-solid fa-pencil"></i>
    </div>
  </div>
    <div class="search-bar">
      <i class="fa fa-search search-icon"></i>
    <input type="text" placeholder="Search..." id="chatSearchInput" />
  </div>
  <div id="searchResults" class="search-results-box"></div>
</div>

<!-- Add Contact Modal -->
<div
  class="modal fade"
  id="addContactModal"
  tabindex="-1"
  aria-labelledby="addContactModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <form id="addContactForm" class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addContactModalLabel">Add New Contact</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="contactName" class="form-label">Name</label>
          <input type="text" class="form-control" id="contactName" required />
        </div>
        <div class="mb-3">
          <label for="contactPhone" class="form-label">Phone Number</label>
          <input
            type="tel"
            name="phone"
            id="contactPhone"
            class="form-control"
            required
            pattern="^[0-9]{10}$"
          />
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Cancel
        </button>
        <button type="submit" class="btn btn-success">Add Contact</button>
      </div>
    </form>
  </div>
</div>

<!-- Toast Notification -->
<div class="toast-notification" id="toastNotification"></div>

<!-- Hidden image crop modal -->
<div id="imageEditModal" class="modal">
  <div class="edit-modal-content">
    <div class="modal-header">
      <h3>Edit Image</h3>
    </div>
    <div class="modal-body">
      <img id="imageToEdit" class="image-preview" />
      <input
        type="text"
        id="imageCaption"
        class="caption-input"
        placeholder="Write a caption (optional)"
      />
      <canvas id="fabricCanvas" width="400" height="300"></canvas>
      <div id="fabricControls" class="drawing-controls">
        <label class="control-label">
          <span>üñçÔ∏è Color:</span>
          <input type="color" id="fabricColor" value="#ff0000" />
        </label>
        <label class="control-label">
          <span>‚úèÔ∏è Size:</span>
          <input type="range" id="fabricBrushSize" min="1" max="20" value="5" />
        </label>
        <button id="fabricClear" class="clear-button">üßΩ Clear</button>
      </div>
    </div>
    <div class="modal-footer button-group">
      <div class="left-buttons">
        <button id="drawButton" class="draw-btn">‚úçÔ∏è Draw</button>
      </div>
      <div class="right-buttons">
        <button id="cancelEdit" class="cancel-btn">Cancel</button>
        <button id="cropButton" class="crop-btn">Crop & Send</button>
      </div>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
  let transcript = "";
  let recognition;
  const textArea = document.getElementById("whisperTextArea");
  const transcribedBox = document.getElementById("transcribedText");



  textArea.addEventListener("input", (e) => {
    transcript = "";
    const typed = e.target.value.trim();
    transcribedBox.innerText = typed || "(empty)";
  });

  document.getElementById("micBtn").onclick = () => {
    // Fallback check
    if (!("webkitSpeechRecognition" in window)) {
      alert("Your browser does not support Speech Recognition.");
      document.getElementById("micBtn").disabled = true;
      document.getElementById("micStatus").innerText =
        "Speech not supported in this browser.";
    }

    recognition = new webkitSpeechRecognition(); // for Chrome
    recognition.lang = "en-US";
    recognition.continuous = false;
    recognition.interimResults = false;

    recognition.onstart = () => {
      document.getElementById("micStatus").innerText = "üéôÔ∏è Listening...";
    };

    recognition.onresult = (e) => {
      transcript = e.results[0][0].transcript;
      document.getElementById("transcribedText").innerText = transcript;
      textArea.value = "";
    };

    recognition.onerror = (event) => {
      console.error("Speech recognition error:", event);

      if (event.error === "network") {
        document.getElementById("micStatus").innerText =
          "‚ö†Ô∏è Network error: Try switching to Chrome or type below.";
      } else if (event.error === "not-allowed") {
        document.getElementById("micStatus").innerText =
          "‚ùå Mic permission denied.";
      } else {
        document.getElementById(
          "micStatus"
        ).innerText = `‚ö†Ô∏è Error: ${event.error}`;
      }
    };

    recognition.onend = () => {
      document.getElementById("micStatus").innerText = "‚úÖ Finished";
    };

    recognition.start();
  };

 document.getElementById("sendWhisper").onclick = async () => {
  const outputBox = document.getElementById("whisperBotOutput");
  const loader = document.getElementById("whisperBotLoader");

  // Reset output + show loader only now
  outputBox.innerHTML = "";
  loader.style.display = "flex";

  const typedText = document.getElementById("whisperTextArea").value.trim();
  document.getElementById("whisperTextArea").value = "";
  const finalPrompt = (transcript || typedText || "").trim();

  if (!finalPrompt) {
    loader.style.display = "none"; // Hide loader if error
    return alert("‚ùå Please speak or type a message first.");
  }

  const summaryRegex = /(summarize|what.*say|last\s*\d+\s*messages?)/i;
  const isSummaryRequest = summaryRegex.test(finalPrompt);

  let messageCount = 10;
  const countMatch = finalPrompt.match(/last\s*(\d+)\s*messages?/i);
  if (countMatch) {
    const parsed = parseInt(countMatch[1]);
    if (!isNaN(parsed) && parsed > 0 && parsed <= 50) messageCount = parsed;
  }

  const recentMessages = isSummaryRequest ? getLastDecryptedMessages(messageCount) : [];
  const fullPrompt = isSummaryRequest
    ? `${finalPrompt}\n\nConversation:\n${recentMessages.join("\n")}`
    : finalPrompt;

  try {
    const res = await fetch("/api/whisperbot", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ prompt: fullPrompt }),
    });

    const data = await res.json();
    if (data.reply) {
      outputBox.innerHTML = `<strong>ü§ñ WhisperBot:</strong><br>${data.reply}`;
    } else {
      outputBox.innerHTML = `<div class="text-danger">‚ùå WhisperBot failed to respond.</div>`;
    }
  } catch (err) {
    outputBox.innerHTML = `<div class="text-danger">‚ùå Error: ${err.message}</div>`;
  } finally {
    loader.style.display = "none"; // Always hide loader at the end
  }
};

function getLastDecryptedMessages(count = 10) {
  const messages = Array.from(document.querySelectorAll(".chat-message"));
  const lastMessages = messages.slice(-count); // get last `count` messages

  return lastMessages.map(el => {
    const sender = el.dataset.sender || "Unknown";
    const text = el.textContent.trim();
    return `${sender}: ${text}`;
  });
}


//  let mediaStream = null;

// async function toggleVideo() {
//     const btn = document.getElementById('videoToggleBtn');
//     // const status = document.getElementById('status');
//     const video = document.getElementById('myVideo');
//     const container = document.querySelector('.video-container');
    
//     if (mediaStream) {
//         // Stop video
//         mediaStream.getTracks().forEach(track => track.stop());
//         mediaStream = null;
//         video.style.display = 'none';
//         container.classList.remove('video-active');
//         btn.innerHTML = '<i class="fa-solid fa-video"></i>';
//         // status.textContent = "Camera is off";
//     } else {
//         // Start video
//         try {
//             mediaStream = await navigator.mediaDevices.getUserMedia({ 
//                 video: true, 
//                 audio: false // Change to true if you want audio
//             });
//             video.srcObject = mediaStream;
//             video.style.display = 'block';
//             container.classList.add('video-active');
//             btn.innerHTML = '<i class="fa-solid fa-video-slash"></i>';
//             // status.textContent = "Camera is active";
//         } catch (err) {
//             console.error("Error accessing camera:", err);
//             // status.textContent = "Error accessing camera";
//             // status.style.color = "#dc3545";
//         }
//     }
// }

// // Optional: Clean up when leaving page
// window.addEventListener('beforeunload', () => {
//     if (mediaStream) {
//         mediaStream.getTracks().forEach(track => track.stop());
//     }
// });

</script>
