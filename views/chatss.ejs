<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HarborChat</title>
    <link href="https://fonts.googleapis.com/css2?family=Segoe+UI:wght@400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        :root {
            --primary: #25D366;
            --primary-dark: #128C7E;
            --sidebar-bg: #f0f2f5;
            --text-primary: #111b21;
            --text-secondary: #667781;
            --border-color: #e9edef;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', sans-serif;
        }

        body {
            height: 100vh;
            display: flex;
            background-color: var(--sidebar-bg);
        }

        /* Sidebar Styles */
        .sidebar {
            width: 30%;
            min-width: 300px;
            max-width: 400px;
            height: 100%;
            border-right: 1px solid var(--border-color);
            background-color: white;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        /* Header */
        .sidebar-header {
            padding: 10px 16px;
            background-color: var(--sidebar-bg);
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid var(--border-color);
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--primary);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 500;
        }

        .user-name {
            font-weight: 500;
            color: var(--text-primary);
        }

        .header-icons {
            display: flex;
            gap: 20px;
            color: var(--text-secondary);
        }

        /* Search */
        .search-container {
            padding: 8px 10px;
            background-color: white;
        }

        .search-box {
            background-color: var(--sidebar-bg);
            border-radius: 8px;
            padding: 8px 12px;
            display: flex;
            align-items: center;
        }

        .search-box input {
            border: none;
            background: transparent;
            width: 100%;
            padding: 4px 8px;
            outline: none;
            font-size: 14px;
        }

        /* Contact List */
        .contact-list {
            flex: 1;
            overflow-y: auto;
        }

        .contact-item {
            display: flex;
            padding: 12px 16px;
            gap: 12px;
            border-bottom: 1px solid var(--border-color);
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .contact-item:hover {
            background-color: #f5f5f5;
        }

        .contact-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: #dfe5e7;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 500;
        }

        .contact-info {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: center;
            overflow: hidden;
        }

        .contact-name {
            font-weight: 500;
            color: var(--text-primary);
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .contact-last-msg {
            font-size: 14px;
            color: var(--text-secondary);
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        /* Chat Area */
        .chat-area {
            flex: 1;
            display: flex;
            flex-direction: column;
            background-color: #e5ddd5;
        }

        /* Empty State */
        .empty-chat {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            color: var(--text-secondary);
            text-align: center;
            padding: 20px;
        }

        .empty-chat-icon {
            font-size: 100px;
            margin-bottom: 20px;
            color: #d1d7db;
        }

        /* Toast Notification */
        .toast-notification {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: var(--primary-dark);
            color: white;
            padding: 12px 20px;
            border-radius: 4px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            display: none;
        }

        .toast-notification.show {
            display: block;
            animation: fadeIn 0.3s, fadeOut 0.3s 2.7s;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes fadeOut {
            from { opacity: 1; transform: translateY(0); }
            to { opacity: 0; transform: translateY(20px); }
        }
    </style>
</head>
<body>
    <!-- Sidebar with Contacts -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <div class="user-profile">
                <div class="user-avatar">U</div>
                <div class="user-name">User</div>
            </div>
            <div class="header-icons">
                <button class="btn btn-link p-0" data-bs-toggle="modal" data-bs-target="#addContactModal">
                    <i class="fas fa-user-plus"></i>
                </button>
                <i class="fas fa-ellipsis-v"></i>
            </div>
        </div>

        <div class="search-container">
            <div class="search-box">
                <i class="fas fa-search"></i>
                <input type="text" placeholder="Search or start new chat">
            </div>
        </div>

        <div class="contact-list" id="contactList">
            <% if (contacts && contacts.length > 0) { %>
                <% contacts.forEach(contact => { %>
                    <div class="contact-item">
                        <div class="contact-avatar"><%= contact.name.charAt(0) %></div>
                        <div class="contact-info">
                            <div class="contact-name"><%= contact.name %></div>
                            <div class="contact-last-msg"><%= contact.phone %></div>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="empty-chat">
                    <div class="empty-chat-icon">
                        <i class="fas fa-users"></i>
                    </div>
                    <p>No contacts yet</p>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Chat Area -->
    <div class="chat-area" id="chatArea">
        <div class="empty-chat">
            <div class="empty-chat-icon">
                <i class="fas fa-comment-dots"></i>
            </div>
            <h2>HarborChat Web</h2>
            <p>Select a chat to start messaging</p>
        </div>
    </div>

    <!-- Add Contact Modal -->
    <div class="modal fade" id="addContactModal" tabindex="-1" aria-labelledby="addContactModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="addContactForm" class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addContactModalLabel">Add New Contact</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="contactName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="contactName" required>
                    </div>
                    <div class="mb-3">
                        <label for="contactPhone" class="form-label">Phone Number</label>
                                  <input type="text" name="phone" id="contactPhone" class="form-control" required pattern="^[0-9]{10,15}$">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Contact</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Toast Notification -->
    <div class="toast-notification" id="toastNotification"></div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Add contact form submission
        document.getElementById("addContactForm").addEventListener("submit", async function(e) {
            e.preventDefault();
            
            const name = document.getElementById("contactName").value.trim();
            const phone = document.getElementById("contactPhone").value.trim();
               

            try {
      const res = await fetch("/contacts/ajax/add", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, phone })
      });

      const result = await res.json();
      console.log(result)

      if (res.ok) {
        
            const contactList = document.getElementById('contactList');
                const emptyState = contactList.querySelector('.empty-chat');
                
                if (emptyState) {
                    contactList.removeChild(emptyState);
                }
                
                const newContact = document.createElement('div');
                newContact.className = 'contact-item';
                newContact.innerHTML = `
                    <div class="contact-avatar">${name.charAt(0)}</div>
                    <div class="contact-info">
                        <div class="contact-name">${name}</div>
                        <div class="contact-last-msg">${phone}</div>
                    </div>
                `;
                
                contactList.appendChild(newContact);
                
                // Reset form and close modal
                e.target.reset();
                bootstrap.Modal.getInstance(document.getElementById('addContactModal')).hide();
                
                // Show success notification
                showToast('Contact added successfully');

        
        e.target.reset();
      } else {
        // console.log(err)
        alert(result.message || "Something went wrong.");
        
      }
    } catch (err) {
      console.error(err);
      alert("Failed to add contact.");
    }


       
        });

        // Show toast notification
        function showToast(message) {
            const toast = document.getElementById('toastNotification');
            toast.textContent = message;
            toast.classList.add('show');
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }
    </script>
</body>
</html>